<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.demo</groupId>
	<artifactId>innerVisitor</artifactId>
	<version>4.8</version>
	<packaging>jar</packaging>
	<name>innerVisitor</name>
	<url>http://jfinal.com/user/1</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<slf4j.version>1.7.25</slf4j.version>
		<activiti.version>5.22.0</activiti.version>
	</properties>
	<!-- 使用阿里 maven 库 -->
	<repositories>
		<repository>
			<id>ali-maven</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
			<repository>
				<id>getui-nexus</id>
				<url>http://mvn.gt.igexin.com/nexus/content/repositories/releases/</url>
			</repository>
	</repositories>
	<!-- 添加快照版本库,updatePolicy: always、daily、interval、never -->
	<!-- repositories>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</repository>
	</repositories -->
	
	<dependencies>
	
		<!-- jfinal -->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal</artifactId>
			<version>4.8</version>
		</dependency>

		<!-- jfinal-undertow 开发、部署一体化 web 服务器 -->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal-undertow</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-websockets-jsr</artifactId>
			<version>2.0.28.Final</version>
		</dependency>
		<!-- junit 单元测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- 实人认证-->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.8</version>
		</dependency>
		<!--桥接器:告诉slf4j使用slf4j-simple-->
<!--		<dependency>-->
<!--			<groupId>org.slf4j</groupId>-->
<!--			<artifactId>slf4j-simple</artifactId>-->
<!--			<version>${slf4j.version}</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
<!--		输出数据库查询语句-->
		<dependency>
			<groupId>com.googlecode.log4jdbc</groupId>
			<artifactId>log4jdbc</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>JavaJNICall</groupId>
			<artifactId>JavaJNICall</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- log4j 日志 -->
<!--		<dependency>-->
<!--			<groupId>log4j</groupId>-->
<!--			<artifactId>log4j</artifactId>-->
<!--			<version>1.2.17</version>-->
<!--		</dependency>-->
		
		<!-- sqlsql 驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.28</version>
	    <!--<version>8.0.11</version>-->
		</dependency>
		
		<!-- druid 数据源连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.29</version>
		</dependency>
	
		<!-- cos 文件上传 -->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>cos</artifactId>
			<version>2019.8</version>
		</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.9.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.oschina.j2cache</groupId>
			<artifactId>j2cache-core</artifactId>
			<version>2.1.0</version>
			<exclusions>
				<exclusion>
					<artifactId>kryo-shaded</artifactId>
					<groupId>com.esotericsoftware</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.10.4</version>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.11</version>
		</dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.9</version>
        </dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.18</version>
		</dependency>
<!--		个推-->
		<dependency>
			<groupId>com.gexin.platform</groupId>
			<artifactId>gexin-rp-sdk-http</artifactId>
			<version>4.1.0.5</version>
		</dependency>
        <dependency>
            <groupId>net.sf.jmimemagic</groupId>
            <artifactId>jmimemagic</artifactId>
            <version>0.1.4</version>
        </dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>4.0.1</version>
		</dependency>
		<!--<dependency>
            <groupId>JavaJNICall</groupId>
            <artifactId>JavaJNICall</artifactId>
            <version>1.0</version>
        </dependency>-->
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>3.6.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.14</version>
		</dependency>


		<dependency>
			<groupId>it.sauronsoftware.cron4j</groupId>
			<artifactId>cron4j</artifactId>
			<version>2.2.5</version>
		</dependency>


		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-engine</artifactId>
			<version>5.18.0</version>
		</dependency>

		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-rest</artifactId>
			<version>${activiti.version}</version>
		</dependency>
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-explorer</artifactId>
			<version>${activiti.version}</version>
		</dependency>
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-diagram-rest</artifactId>
			<version>${activiti.version}</version>
		</dependency>
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-simple-workflow</artifactId>
			<version>${activiti.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
		</dependency>
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>5.3.9</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>RELEASE</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>com.aliyun</groupId>
			<artifactId>dysmsapi20170525</artifactId>
			<version>2.0.1</version>
		</dependency>
	</dependencies>
	
	<build>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<!-- java8 保留参数名编译参数 -->
					<compilerArgument>-parameters</compilerArgument>
					<compilerArguments><verbose /></compilerArguments>
				</configuration>
			</plugin>
			
			<!--
				jar 包中的配置文件优先级高于 config 目录下的 "同名文件"
				因此，打包时需要排除掉 jar 包中来自 src/main/resources 目录的
				配置文件，否则部署时 config 目录中的同名配置文件不会生效
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.2</version>
				<configuration>

					<excludes>
						<!-- **/* 前缀用法，可以匹配所有路径，例如：**/*.txt -->
						<exclude>/*.txt</exclude>
						<exclude>/*_product.properties</exclude>
						<exclude>/*_develop.properties</exclude>
					</excludes>
<!--					<includes>-->
<!--						<include>/log4j.properties</include>-->
<!--					</includes>-->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-webapp</id>
						<phase>process-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<outputDirectory>${basedir}/target/config/</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources</directory>
									<excludes>
										<exclude>**/web.xml</exclude>
									</excludes>
									<includes>
										 <include>**/*.xml</include>
										 <include>**/*.txt</include>
										 <include>**/*.properties</include>
									</includes>

								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 
				使用 mvn clean package 打包 
				更多配置可参考官司方文档：http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html
	 		-->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-assembly-plugin</artifactId>-->
<!--				<version>3.1.0</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>make-assembly</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>single</goal>-->
<!--						</goals>-->
<!--						-->
<!--						<configuration>-->
<!--							&lt;!&ndash; 打包生成的文件名 &ndash;&gt;-->
<!--							<finalName>${project.artifactId}</finalName>-->
<!--							&lt;!&ndash; jar 等压缩文件在被打包进入 zip、tar.gz 时是否压缩，设置为 false 可加快打包速度 &ndash;&gt;-->
<!--							<recompressZippedFiles>false</recompressZippedFiles>-->
<!--							&lt;!&ndash; 打包生成的文件是否要追加 package.xml 中定义的 id 值 &ndash;&gt;-->
<!--							<appendAssemblyId>true</appendAssemblyId>-->
<!--							&lt;!&ndash; 指向打包描述文件 package.xml &ndash;&gt;-->
<!--							<descriptors>-->
<!--								<descriptor>package.xml</descriptor>-->
<!--							</descriptors>-->
<!--							&lt;!&ndash; 打包结果输出的基础目录 &ndash;&gt;-->
<!--							<outputDirectory>${project.build.directory}/</outputDirectory>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>innerVisitor-1.0</finalName>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.xiaosong.MainConfig</mainClass>
								</transformer>

								<!--
									下面的配置支持排除指定文件打包到 jar 之中，可以用于排除需要修改的配置文件以便于在外部的 config 目录下的
									同名配置文件生效，建议使用 Prop.appendIfExists(xxx_pro.txt) 在外部放一个非同名配置来覆盖开发环境的配置
									则可以不用使用下面的配置，文档参考:
										http://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html#DontIncludeResourceTransformer
								-->
								<transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
									<resources>
										<!-- <resource>demo-config-dev.txt</resource> -->
										<!-- <resource>.PDF</resource> -->
										<!-- <resource>READ.md</resource> -->
									</resources>
								</transformer>
							</transformers>

							<!--
								解决 fatjar 的 "java.lang.SecurityException: Invalid signature file digest
								for Manifest main attributes" 问题
							-->
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>

						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>
	
</project>
